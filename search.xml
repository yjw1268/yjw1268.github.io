<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Fiddler手机抓包使用</title>
      <link href="/2020/01/29/Fiddler%E6%89%8B%E6%9C%BA%E6%8A%93%E5%8C%85%E4%BD%BF%E7%94%A8/"/>
      <url>/2020/01/29/Fiddler%E6%89%8B%E6%9C%BA%E6%8A%93%E5%8C%85%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>手机上无法直接查看网络请求数据，需要使用抓包工具。Fiddler是一个免费的web调试代理，可以用它实现记录、查看和调试手机终端和远程服务器之间的http/https通信。</p><h2 id="PC端Fiddler使用"><a href="#PC端Fiddler使用" class="headerlink" title="PC端Fiddler使用"></a>PC端Fiddler使用</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ul><li><a href="https://www.telerik.com/download/fiddler" target="_blank" rel="noopener">官方网站</a></li></ul><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><ol><li>手机上的应用很多涉及到个人信息，采用比较安全的HTTPS加密过，而fiddler默认只捕获http会话而不抓取HTTPS报文，导致打开fiddler后就打不开https网页。<br> <strong>解决办法</strong>：打开Fiddler-&gt;Tool-&gt;Fiddler Options-&gt;HTTPS tab，勾选上并Capture HTTPS CONNECTs（捕获 HTTPS 连接）和 Decrypt HTTPS traffic （HTTPS 请求解密），并安装证书（首次使用无证书，会弹出是否信任fiddler证书和安全提示，直接点击yes就行），重启Fiddler生效。在localhost:8888中也可以安装证书。</li><li>如果想要捕获手机上的通信数据，就需要手机连接上Fiddler代理，而Fiddler默认是不允许其他设备进行连接的。<br> <strong>解决办法</strong>：点击 Fiddler-&gt;Tools -&gt; Options，在 Connections 面板选中 Allow remote computers to connect 允许其他设备连接（此操作需重启Fiddler生效）。</li><li>修改手机WLAN需先代理查看电脑ip地址。<br> <strong>解决办法</strong>：可通过cmd命令行输入<code>ipconfig</code>查询。也可以将鼠标置于fiddler右上角的online图标中显示电脑的ip地址。</li></ol><h2 id="手机端Fiddler使用"><a href="#手机端Fiddler使用" class="headerlink" title="手机端Fiddler使用"></a>手机端Fiddler使用</h2><h3 id="证书配置"><a href="#证书配置" class="headerlink" title="证书配置"></a>证书配置</h3><p>需要在移动终端（手机或pad）上指定代理服务器为Fiddler所在主机IP（需要处于同一网络），端口默认8888（即在PC端配置的端口）。</p><ol><li>要保证手机和安装有fiddler的电脑处在同一局域网内，手机能ping通电脑。<br> <strong>解决办法</strong>：家用或办公环境把PC和手机WLAN连接上同一个路由器的无线SSID获取到同一网段内的IP地址即可。在你的手机上打开你连接的 wifi高级设置，设置http代理服务器和端口,IP<br>设置为DHCP。这里的服务器地址就是PC端刚找到的IPv4地址，端口默认8888。</li><li>在手机上需要安装Fiddler根证书，因为Fiddler是通过自己生成的证书对网络请求重新签名进行https会话解密的，如果不安装证书的话只能抓取HTTP请求。<br> <strong>解决办法</strong>：打开手机浏览器，输入Fiddler Server地址<code>http://ipv4.fiddler:8888/</code>（因为fiddler装在PC上，所以Fiddler Server地址就是PC的IP地址，带上默认端口号8888)，或直接输入<code>http://pcip:8888/</code>。跳转到 Fiddler Echo Service 证书下载页，点击FiddlerRoot certificate下载并安装,为证书命名后点击确定。</li></ol><h3 id="问题处理"><a href="#问题处理" class="headerlink" title="问题处理"></a>问题处理</h3><ol><li><p>PC端Log报错：<br><code>!SecureClientPipeDirect failed: System.Security.Authentication.AuthenticationException</code>。<br> <strong>解决办法</strong>：证书未被信任，导致主机拒绝连接。解决报错的方法是将fiddler设置中 Decrypt Https traffic 选项去掉，但是这样很可能将无法抓取https包。有一个<a href="https://stackoverflow.com/questions/33382870/how-to-capture-httpstls-1-0-communications-from-android-app-with-fiddler4" target="_blank" rel="noopener">Stackflow</a>的解释：</p><blockquote><p>TLS1.0可能是Fiddler中最受支持的HTTPS协议。如果发生报错，相关的Android应用程序已启用Certificate Pinning（证书锁定）。如果您非常想避免锁定，可以越狱设备并使用许多第三方工具箱中的任何一个禁用锁定代码即可。</p></blockquote><p> 关于证书固定：</p><blockquote><p>极少数HTTPS客户端应用程序支持一种称为“证书固定”的功能，该功能会将客户端应用程序硬编码为仅接受一个特定的证书。当证书固定的应用程序通过CONNECT隧道与Fiddler进行HTTPS握手时，它将检查响应的证书，并在发现Fiddler生成的证书时拒绝发送任何进一步的请求。不幸的是，没有通用的解决方法可以解决此问题。</p></blockquote></li><li><p>手机端打不开Fiddler Server地址，或手机设置代理后，无法访问网络了，如断网般。<br> <strong>解决办法</strong>：</p><ol><li>在PC端打开注册表，在HKEY_CURRENT_USER\SOFTWARE\Microsoft\Fiddler2下创建一个DWORD，值设置为80（十进制）</li><li>编写FiddlerScript rule，点击Rules &gt; Customize Rules,用ctr+f查找到OnBeforeRequest方法添加一行代码:<br><code>if (oSession.host.toLowerCase() == &quot;webserver:8888&quot;){ oSession.host = &quot;webserver:80&quot;;}</code><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//pass</span><span class="token keyword">if</span> <span class="token punctuation">(</span>m_AlwaysFresh <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>oSession<span class="token punctuation">.</span>oRequest<span class="token punctuation">.</span>headers<span class="token punctuation">.</span><span class="token function">Exists</span><span class="token punctuation">(</span><span class="token string">"If-Modified-Since"</span><span class="token punctuation">)</span> <span class="token operator">||</span> oSession<span class="token punctuation">.</span>oRequest<span class="token punctuation">.</span>headers<span class="token punctuation">.</span><span class="token function">Exists</span><span class="token punctuation">(</span><span class="token string">"If-None-Match"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>     <span class="token punctuation">{</span>         oSession<span class="token punctuation">.</span><span class="token function">utilCreateResponseAndBypassServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         oSession<span class="token punctuation">.</span>responseCode <span class="token operator">=</span> <span class="token number">304</span><span class="token punctuation">;</span>         oSession<span class="token punctuation">[</span><span class="token string">"ui-backcolor"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"Lavender"</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span>oSession<span class="token punctuation">.</span>host<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">"webserver:8888"</span><span class="token punctuation">)</span><span class="token punctuation">{</span> oSession<span class="token punctuation">.</span>host <span class="token operator">=</span> <span class="token string">"webserver:80"</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token comment" spellcheck="true">//pass</span></code></pre><h3 id="还原手机状态"><a href="#还原手机状态" class="headerlink" title="还原手机状态"></a>还原手机状态</h3>抓包结束后，手动还原手机状态，方法如下（不同机型可能有些微差别）：</li></ol></li><li><p>停止电脑对手机的网络监控：系统设置-WLAN，长按wifi修改网络，高级选项找到代理，去掉手动代理即可；</p></li><li><p>删除手机中证书：安卓系统设置-系统-设备安全-受信任的凭据-用户 ，点击证书删除即可；</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫 </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo框架使用笔记</title>
      <link href="/2020/01/27/Hexo%E6%A1%86%E6%9E%B6%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/"/>
      <url>/2020/01/27/Hexo%E6%A1%86%E6%9E%B6%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>Hexo是一个快速、简洁且高效的博客框架。只需要在Node.js上一句语句即可完场部署。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>安装 Hexo 相当简单，只需要先安装下列应用程序即可：</p><ul><li>Node.js (Node.js 版本需不低于 8.10，建议使用 Node.js 10.0 及以上版本)  </li><li>Git</li></ul><p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p><pre class=" language-bash"><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span> hexo-cli -g</code></pre><h2 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h2><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p><pre class=" language-bash"><code class="language-bash">$ hexo init <span class="token operator">&lt;</span>folder<span class="token operator">></span>$ <span class="token function">cd</span> <span class="token operator">&lt;</span>folder<span class="token operator">></span>$ <span class="token function">npm</span> <span class="token function">install</span></code></pre><p>新建完成后，指定文件夹的目录如下：</p><pre><code>.├── _config.yml├── package.json├── scaffolds├── source|   ├── _drafts|   └── _posts└── themes</code></pre><h3 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h3><p>网站的配置信息，您可以在此配置大部分的参数。</p><h3 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h3><p>应用程序的信息。其中EJS, Stylus 和 Markdown renderer 已默认安装。</p><h3 id="scaffolds"><a href="#scaffolds" class="headerlink" title="scaffolds"></a>scaffolds</h3><p>模版文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。</p><p>Hexo的模板是指在新建的文章文件中默认填充的内容。例如，如果您修改scaffold/post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改。</p><h3 id="source"><a href="#source" class="headerlink" title="source"></a>source</h3><p>资源文件夹是存放用户资源的地方。除 _posts 文件夹之外，开头命名为 _ (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去。</p><h3 id="themes"><a href="#themes" class="headerlink" title="themes"></a>themes</h3><p>主题文件夹。Hexo 会根据主题来生成静态页面。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jsDelivr使用文档</title>
      <link href="/2020/01/27/jsdelivr%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3/"/>
      <url>/2020/01/27/jsdelivr%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3/</url>
      
        <content type="html"><![CDATA[<p>jsDelivr – Open Source CDN, free, fast, and reliable</p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><ul><li><p>npm：</p><pre><code>  // load any project hosted on npm  https://cdn.jsdelivr.net/npm/package@version/file  // load jQuery v3.2.1  https://cdn.jsdelivr.net/npm/jquery@3.2.1/dist/jquery.min.js  // use a version range instead of a specific version  https://cdn.jsdelivr.net/npm/jquery@3.2/dist/jquery.min.js  https://cdn.jsdelivr.net/npm/jquery@3/dist/jquery.min.js  // omit the version completely to get the latest one  // you should NOT use this in production  https://cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js  // add &quot;.min&quot; to any JS/CSS file to get a minified version  // if one doesn&#39;t exist, we&#39;ll generate it for you  https://cdn.jsdelivr.net/npm/jquery@3.2.1/src/core.min.js  // omit the file path to get the default file  https://cdn.jsdelivr.net/npm/jquery@3.2  // add / at the end to get a directory listing  https://cdn.jsdelivr.net/npm/jquery/</code></pre></li><li><p>GitHub</p><pre><code>  // load any GitHub release, commit, or branch  // note: we recommend using npm for projects that support it  https://cdn.jsdelivr.net/gh/user/repo@version/file  // load jQuery v3.2.1  https://cdn.jsdelivr.net/gh/jquery/jquery@3.2.1/dist/jquery.min.js  // use a version range instead of a specific version  https://cdn.jsdelivr.net/gh/jquery/jquery@3.2/dist/jquery.min.js  https://cdn.jsdelivr.net/gh/jquery/jquery@3/dist/jquery.min.js  // omit the version completely to get the latest one  // you should NOT use this in production  https://cdn.jsdelivr.net/gh/jquery/jquery/dist/jquery.min.js  // add &quot;.min&quot; to any JS/CSS file to get a minified version  // if one doesn&#39;t exist, we&#39;ll generate it for you  https://cdn.jsdelivr.net/gh/jquery/jquery@3.2.1/src/core.min.js  // add / at the end to get a directory listing  https://cdn.jsdelivr.net/gh/jquery/jquery/</code></pre></li><li><p>WordPress</p><pre><code>  // load any plugin from the WordPress.org plugins SVN repo  https://cdn.jsdelivr.net/wp/plugins/project/tags/version/file  // load an exact version  https://cdn.jsdelivr.net/wp/plugins/wp-slimstat/tags/4.6.5/wp-slimstat.js  // load the latest version  // you should NOT use this in production  https://cdn.jsdelivr.net/wp/plugins/wp-slimstat/trunk/wp-slimstat.js  // load any theme from the WordPress.org themes SVN repo  https://cdn.jsdelivr.net/wp/themes/project/version/file  // load an exact version  https://cdn.jsdelivr.net/wp/themes/twenty-eightteen/1.7/assets/js/html5.js  // add &quot;.min&quot; to any JS/CSS file to get a minified version  // if one doesn&#39;t exist, we&#39;ll generate it for you</code></pre></li></ul><h2 id="具体说明"><a href="#具体说明" class="headerlink" title="具体说明"></a>具体说明</h2><p>以Github为例，对于用户Ryan创建的仓库Ryan.github.io来说，发布了release为v1.0，则在仓库中img/0.jpg的CDN的url对比文档为：  </p><pre><code>https://cdn.jsdelivr.net/gh/Ryan/Ryan.github.io@v1.0/img/0.jpg https://cdn.jsdelivr.net/gh/user/repo@version/file</code></pre><p>其他用法类似。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SAI2的安装与初始化</title>
      <link href="/2020/01/23/SAI2%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E5%88%9D%E5%A7%8B%E5%8C%96/"/>
      <url>/2020/01/23/SAI2%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E5%88%9D%E5%A7%8B%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<p>本文转载自<a href="https://www.saier.me/sai2/" target="_blank" rel="noopener">夜月七境-[简繁中文]SAI2进度报告版</a>,采用<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh" target="_blank" rel="noopener">知识共享(Creative Commons)署名-非商业性使用-禁止演绎 4.0</a>进行许可。</p><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>最新版 SAI2 继承设置的问题请看这篇文章<a href="https://www.saier.me/import-sai-settings/" target="_blank" rel="noopener">《详解新版SAI2的继承设置和导入笔刷》</a>。</p><ul><li><a href="https://share.weiyun.com/6744fd38418d294b863098031477e64a" target="_blank" rel="noopener">腾讯微云</a>（有外链次数限制，下载需要保存到自己的微云里）</li><li><a href="https://pan.baidu.com/share/init?surl=jHDb8t4" target="_blank" rel="noopener">百度网盘</a>（提取密码：qxx3）</li></ul><h2 id="有报错请注意"><a href="#有报错请注意" class="headerlink" title="有报错请注意"></a>有报错请注意</h2><ul><li>WinTab 驱动返回了错误，一般是数位板驱动和软件不兼容，可以尝试重装和更新驱动来解决。或者进入 SAI2 的设置（帮助 -&gt; 设置 -&gt; 数位板），试下改成其他 API 方式。</li><li>打开和保存文件的时候报错，可能是 SAI2 被 Windows Defender 之类的杀毒软件禁止了文件访问权限，或者系统本身有问题，临时解决可以关掉文件菜单里的「总是使用文件查看器」。</li></ul><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><h3 id="关于-SAI2"><a href="#关于-SAI2" class="headerlink" title="关于 SAI2"></a>关于 SAI2</h3><p>如今，SAI Ver.2 的开发正进展顺利。由于在 Ver.1 上新增功能的代价太大了，所以 Ver.1 的预定新增功能全部取消，它们将全部改为在 Ver.2 上实现。由于取消 Ver.1 的预定新增功能违背了作者之前承诺，作为补偿，Ver.1 的用户可无偿升级 Ver.2（注意，这是作者原话，只针对在官网购买完整授权的用户）。</p><h3 id="SAI2-的进度报告"><a href="#SAI2-的进度报告" class="headerlink" title="SAI2 的进度报告"></a>SAI2 的进度报告</h3><p>现在公开的测试版已经拥有跟 Ver.1 几乎一样的功能。由于是开发版本，自然很可能会有BUG，所以你如果想使用稳定的软件，还是不要用这个开发版了。另外，这个版本也不是面向电脑菜鸟用户的。如果你不熟悉电脑的基本知识和操作的话，请不要使用这个版本。</p><h3 id="让画笔接近-Ver-1-手感的方法-2017-07-27版以后"><a href="#让画笔接近-Ver-1-手感的方法-2017-07-27版以后" class="headerlink" title="让画笔接近 Ver.1 手感的方法(2017-07-27版以后)"></a>让画笔接近 Ver.1 手感的方法(2017-07-27版以后)</h3><p>2016-03-17版开始，画笔工具面板「其他」的轮廓硬度设置为 0，浓度增幅设置为 100，并启用了「Ver1笔压特性」的话，就会调整到和 Ver.1 接近的手感。<strong>可以的话，请按照下列的步骤重新创建画笔工具并设置「浓度增幅」和「Ver1笔压特性」。</strong></p><ol><li><p>在画笔工具的图标上单击右键，从菜单中选择删除<br>（因为动过设置的地方太多，会有些奇怪的问题，所以最好是删除掉。如果想保留当前的设置，可以按住 Ctrl 并拖动工具的图标，把它移动到别的空槽里）</p></li><li><p>在空槽上单击右键，从菜单中选择画笔工具</p></li><li><p>打开工具面板的「其他」，将「轮廓硬度」设置为 0，「浓度增幅」设置为 100，并开启「Ver1笔压特性」</p></li></ol><p>你还可以按照你的喜好，打开菜单的「帮助」→「设置」，把工具里的「将手抖修正为 1～15 的画笔笔画调整到跟 Ver.1 一样的感觉」开启。但是，如果你介意在快速绘画时的出入锋线尾，那就不要进行这个设置了。</p><p>另外，对于下列的差异之处，今后应该是不会调整的。</p><ul><li><p>散焦较大的画笔和纯色的画笔，浓度感基本相同<br>（Ver.1 散焦较大的时，画笔浓度会变淡）</p></li><li><p>画笔工具「维持不透明度」的效果显然易见<br>（Ver.1 只有分不出程度的效果）</p></li><li><p>画笔工具与混色相关的参数，影响的程度会有些不同<br>（Ver.1 的话，根据散焦和绘图品质的设置，参数的影响会有一定的偏差；而 Ver.2 则调整为尽量减少这种偏差。对于与混色相关的参数，需要你反复试验才能达到好的效果。）</p></li></ul><h3 id="模糊工具的制作方法"><a href="#模糊工具的制作方法" class="headerlink" title="模糊工具的制作方法"></a>模糊工具的制作方法</h3><p>原来的模糊工具是水彩笔的变种。所以你可以新建一个水彩笔工具，然后进行下列的设置，就能在 Ver.2 里新建模糊工具。</p><ul><li>[散焦] … 左边的波形</li><li>[混色] … 100</li><li>[水分量] … 100</li><li>[维持不透明度] … off</li><li>[模糊笔压] … 100%</li></ul><h3 id="最低系统要求"><a href="#最低系统要求" class="headerlink" title="最低系统要求"></a>最低系统要求</h3><p>电脑         PC/AT的兼容机<br>操作系统     Windows 2000/XP/Vista/7/8/8.1/10<br>处理器       Core 2 Duo 1.6GHz 以上<br>内存         1GB 以上<br>硬盘         20GB 以上的可用磁盘空间<br>显示器       1024x768 1677 万色<br>输入设备     支持压感的数位板 (支持WinTab API和TabletPC API)</p><h2 id="版权声明"><a href="#版权声明" class="headerlink" title="版权声明"></a>版权声明</h2><ul><li>原版软件：PaintTool SAI Ver.2</li><li>版权所有：SYSTEMAX Software Development</li><li>官网：<a href="http://www.systemax.jp" target="_blank" rel="noopener">http://www.systemax.jp</a></li><li>汉化：Xelloss</li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> 绘画 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/01/21/hello-world/"/>
      <url>/2020/01/21/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
